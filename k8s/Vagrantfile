# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_NO_PARALLEL'] = 'yes'
NodeCount = 2
Vagrant.configure(2) do |config|

  config.vm.provision "shell", path: "k8s_bootstrap/bootstrap.sh"

  # Kubernetes Master Server
  config.vm.define "master" do |master|
    master.vm.box = "bento/ubuntu-18.04"
    master.vm.hostname = "master"
    master.vm.network "private_network", ip: "172.42.42.100"
    master.vm.provider "virtualbox" do |v|
      v.name = "master"
      v.memory = 1024
      v.cpus = 2
      file_to_disk = "./tmp/large_disk_master.vdi"
      unless File.exist?(file_to_disk)
        v.customize ['createhd', '--filename', file_to_disk, '--size', 4 * 1024]
      end
        v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', file_to_disk]
    end
    master.vm.provision "shell", path: "k8s_bootstrap/bootstrap_master.sh"
  end

  # Kubernetes Worker Nodes
  (1..NodeCount).each do |i|
    config.vm.define "worker#{i}" do |worker|
      worker.vm.box = "bento/ubuntu-18.04"
      worker.vm.hostname = "worker#{i}"
      worker.vm.network "private_network", ip: "172.42.42.10#{i}"
      worker.vm.provider "virtualbox" do |v|
        v.name = "worker#{i}"
        v.memory = 2048
        v.cpus = 2
        file_to_disk = "./tmp/large_disk_worker#{i}.vdi"
        unless File.exist?(file_to_disk)
          v.customize ['createhd', '--filename', file_to_disk, '--size', 4 * 1024]
        end
        v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', file_to_disk]
      end
      worker.vm.provision "shell", path: "k8s_bootstrap/bootstrap_worker.sh"
    end
  end

end
